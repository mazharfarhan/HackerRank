Primeface plugin for interactive web design

#############

JSP is the java's EE web programming language. Java Server Pages is used for creating dynamic web applications. It bridges the gap between
html and java codes with additional featueres like expressions, servlet tags and others.

Both the JSP and JSF have similar syntax for expressions where the only difference is that JSP uses $ symbol where as JSF uses #. In JSF, as we know we use the class name with the small first letter. Unless their is an explicit name defined in the name annotation.

The expression language example
  <h: panelGroup rendered="#{not empty track.cargo}"  # track is the class name
  The above syntax is checking if the value cargo is not empty based on which it will render the view with the component.
  
 Use of implicit HTTP request object
    <a href= "#{request.contextPath}"
##################################  

In modern Java EE, annotations has replaced xml files, convention over configuration has replaced tedious manual configurations and dependency injection hides resource creation and look up. We just need a POJO(plain old java object) with annotations to have a EJB

EJB encapsulates the business logic. The container provides various EJB services like thread safety, mointoring and transaction, pooling.
Two types of Enterprise java beans : 
a. Session beans
b. Message driven beans

Session beans implement business logic, They are going to be stateful, stateless or singleton. They also hold specific client related data.

There is only one type pof workflow bean - message driven bean. They cannot be directly accessed by the client. The only way to communicate with them is through messages.

Access modes of EJB's

a. Local (default): Within the container.
b. Remote : External application
c. Web Service: client using web serice protocol.

Management modes: 
a.Container access: Convention over configuration.
b. Bean access itself: Developers with the help service annotations.

  Inside the stateless EJB, the methods are transactional in nature. The transactionality is taken care by the container through a proxy mechanism. The methods are thread safe and montiored as well . Just we have to annotate them with the EJB annotation.
#############################################

Java Messaging Service: This belongs in the data access layer where it provides access to the datastore
  It is used for passing messages in an asynchronous, scalable and secure manner amoong the distributed applications. Asynchronous means the sender and reciever of the message need not access the message queue at the same time. 
 USes cases: a. The application should be able to send the message without having to wait for a response.
 b. Sender does not depend on the reciever's interface so that reciever can easily be replaced.
 c. The application should be able to run when the reciver is down.
 
 Decoupling of the sender and the reciever.
 
 The destination is where the message is sent which is either referred as a queue or a topic.
 The place where message originates is called a sender or a publisher.
 Subscriber or reciever is the place where message terminates.
 Messages will have payload that is extracted by the reciever.
 
 Messages can be text, byte, stream, object and map 
 
 In point in to point setup, messages are send to the single reciever through queues. If the reciever is down, then the messages are queued up in the message queue.
 In case of publisher/subscriber setup, messages are sent to multiple subscribers The destination is called a topic.
 
 
 
 

  
  
